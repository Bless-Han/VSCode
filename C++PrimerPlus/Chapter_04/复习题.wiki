1. ?
{{{cpp
  int actor[30];
  short betsie[100];
  float chuck[13];
  long double dipsea[64];
}}}
2. ?
{{{cpp
  #include <array>
  using namespace std;
  array<char, 30> actor;
  array<short, 100> betsie;
  array<float, 13> chuck;
  array<long double, 64> dipsea;
}}}
3. ?
{{{cpp
  int a[5] = {1, 3, 5, 7, 9};
}}}
4. ?
{{{cpp
  int even = a[0] + a[4];
}}}
5. ?
{{{cpp
  cout << ideas[1] << endl;
}}}
6. ?
{{{cpp
  char c[] = "cheeseburger";
}}}
7. ?
{{{cpp
  string s = "Waldorf Salad";
}}}
8. ?
{{{cpp
  struct fish{
    string kind;
    double weight;
    double len;
  };
}}}
9. ?
{{{cpp
  fish f = {"GG", 20.3, 3.5};
}}}
10. ?
{{{cpp
  enum{
    No, Yes, Maybe
  };
}}}
11. ?
{{{cpp
  double * pted = &ted;
  cout << *pted << endl;
}}}
12. ?
{{{cpp
  float * ptrea = treacle;
  cout << ptrea[0] << endl;
  cout << ptrea[9] << endl;
}}}
13. ?
{{{cpp
  int n;
  cin >> n;
  int * a = new int[n];
  vector<int> b(n);
}}}
14. ? 有效，打印的是这个字符串的首地址
15. ?
{{{cpp
  struct fish{
    string kind;
    double weight;
    double len;
  };
  fish * f = new fish;
  f->kind = "Good";
  f->weight = 99.5;
  f->len = 2.5;
}}}
16. ? cin.getline(address,80) 可以取得一整行的输入，而cin >> address 只能取得一段输入到空字符就会停止
17. ?
{{{cpp
  #include <iostream>
  #include <array>
  #include <vector>
  const int N = 10;
  std::array<std::string, N> a;
  std::vector<std::string> v(N);
}}}
